#!/usr/bin/env node

import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

console.log('๐ ุจุฏุก ุนูููุฉ ุงูุจูุงุก ูููุดุฑ...');

try {
  // ุชูุธูู ุงููููุงุช ุงูุณุงุจูุฉ
  console.log('๐งน ุชูุธูู ูููุงุช ุงูุจูุงุก ุงูุณุงุจูุฉ...');
  if (fs.existsSync('dist')) {
    fs.rmSync('dist', { recursive: true, force: true });
  }

  // ุจูุงุก ุงููุงุฌูุฉ ุงูุฃูุงููุฉ ุจุงุณุชุฎุฏุงู ุฅุนุฏุงุฏ ุงููุดุฑ
  console.log('โ๏ธ  ุจูุงุก ุงููุงุฌูุฉ ุงูุฃูุงููุฉ...');
  execSync('vite build --config vite.config.production.ts', { stdio: 'inherit' });

  // ุจูุงุก ุงูุฎุงุฏู
  console.log('๐ฅ๏ธ  ุจูุงุก ุงูุฎุงุฏู...');
  execSync('esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist', { stdio: 'inherit' });

  // ุฅูุดุงุก ูุฌูุฏ uploads ุฅุฐุง ูู ููู ููุฌูุฏุงู
  const uploadsDir = path.join('dist', 'uploads');
  if (!fs.existsSync(uploadsDir)) {
    fs.mkdirSync(uploadsDir, { recursive: true });
    console.log('๐ ุชู ุฅูุดุงุก ูุฌูุฏ uploads');
  }

  // ูุณุฎ ูููุงุช ูููุฉ
  const filesToCopy = ['package.json', '.env.example'];
  for (const file of filesToCopy) {
    if (fs.existsSync(file)) {
      fs.copyFileSync(file, path.join('dist', file));
      console.log(`๐ ุชู ูุณุฎ ${file}`);
    }
  }

  console.log('โ ุชู ุงูุจูุงุก ุจูุฌุงุญ! ุงููููุงุช ุฌุงูุฒุฉ ูู ูุฌูุฏ dist/');
  console.log('');
  console.log('๐ ุฎุทูุงุช ุงููุดุฑ:');
  console.log('1. ุงุฑูุน ูุญุชููุงุช ูุฌูุฏ dist/ ุฅูู ุงูุฎุงุฏู');
  console.log('2. ูู ุจุชุซุจูุช ุงูุงุนุชูุงุฏูุงุช: npm install --production');
  console.log('3. ุดุบูู ุงูุชุทุจูู: npm start');

} catch (error) {
  console.error('โ ูุดู ุงูุจูุงุก:', error.message);
  process.exit(1);
}